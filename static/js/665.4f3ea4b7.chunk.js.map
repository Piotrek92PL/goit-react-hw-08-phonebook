{"version":3,"file":"static/js/665.4f3ea4b7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Pages/Phonebook/ContactForm/ContactForm.module.css?f317","redux/contacts/selectors.js","components/Pages/Phonebook/ContactForm/ContactForm.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/Pages/Phonebook/ContactList/ContactList.module.css?96ef","components/Pages/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Pages/Phonebook/Filter/Filter.module.css?2062","components/Pages/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Pages/Phonebook/Phonebook.module.css?89e9","components/Pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContactForm_wrapper\":\"ContactForm_ContactForm_wrapper__dvcE5\",\"ContactForm_inputField\":\"ContactForm_ContactForm_inputField__URKoj\",\"ContactForm_button\":\"ContactForm_ContactForm_button__ql2lv\",\"ContactForm_title\":\"ContactForm_ContactForm_title__Czog9\"};","export const selectContacts = state => state.contacts.list;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n","import React, { useRef } from 'react';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Stack, TextField, Button } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const nameInputRef = useRef();\n  const numberInputRef = useRef();\n\n  const isContactNameExists = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = nameInputRef.current.value.trim();\n    const number = numberInputRef.current.value.trim();\n\n    if (isContactNameExists(name)) {\n      toast.error(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    nameInputRef.current.value = '';\n    numberInputRef.current.value = '';\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Box onSubmit={handleSubmit} component=\"form\" autoComplete=\"off\">\n        <Stack direction={'column'} spacing={3}>\n          <TextField\n            fullWidth\n            required\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            color=\"primary\"\n            inputRef={nameInputRef}\n          />\n          <TextField\n            fullWidth\n            required\n            label=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            color=\"primary\"\n            inputRef={numberInputRef}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add contact\n          </Button>\n        </Stack>\n      </Box>\n    </div>\n  );\n}\n","import { selectContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter.status;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const contactsFilter = selectFilter(state);\n\n  if (contactsFilter === '') {\n    return contacts;\n  }\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsFilter.toLowerCase())\n  );\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__jUsxd\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from '../../../../redux/filter/selectors.js';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport { Button } from '@mui/material';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const deleteSelectedContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul className={css.wrapper}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}{' '}\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            onClick={() => deleteSelectedContact(id)}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__NLaK7\",\"search-textfield\":\"Filter_search-textfield__FGL5U\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\nimport { TextField } from '@mui/material';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <TextField\n        onChange={handleInputChange}\n        fullWidth\n        id=\"search-textfield\"\n        placeholder=\"Search by name\"\n        type=\"text\"\n        variant=\"standard\"\n        color=\"primary\"\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Phonebook_title__rN2RT\",\"message\":\"Phonebook_message__IKjfm\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { fetchContacts } from '../../../redux/contacts/operations';\nimport {\n  selectError,\n  selectLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n\n  const { loading, error, allContacts, filter } = useSelector(state => ({\n    loading: selectLoading(state),\n    error: selectError(state),\n    allContacts: selectContacts(state) || [],\n    filter: state.contacts.filter,\n  }));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = allContacts.filter(\n    contact =>\n      contact &&\n      contact.name &&\n      filter &&\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  if (!allContacts.length) {\n    return <div className={css.message}>Loading...</div>;\n  }\n\n  const renderContent = () => {\n    if (loading) return <b className={css.message}>Request in progress...</b>;\n    if (filteredContacts.length === 0) {\n      return (\n        <p className={css.message}>\n          The Phonebook is empty. Add your first contact.\n        </p>\n      );\n    }\n    return <ContactList contacts={filteredContacts} />;\n  };\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your Phonebook</title>\n      </Helmet>\n      <h2 className={css.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      {!error && renderContent()}\n    </HelmetProvider>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectLoading","loading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","nameInputRef","useRef","numberInputRef","className","css","Box","onSubmit","e","preventDefault","name","current","value","trim","number","some","contact","isContactNameExists","addContact","toast","component","autoComplete","Stack","direction","spacing","TextField","fullWidth","required","label","type","color","inputRef","Button","variant","selectFilteredContacts","contactsFilter","filter","status","selectFilter","toLowerCase","includes","ContactList","map","id","size","onClick","contactId","deleteContact","Filter","onChange","target","setFilter","placeholder","Phonebook","allContacts","useEffect","fetchContacts","filteredContacts","length"],"sourceRoot":""}